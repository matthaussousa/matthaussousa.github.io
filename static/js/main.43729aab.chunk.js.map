{"version":3,"sources":["resources/icons/add_photo.svg","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Input/Input.jsx","components/ProfileImage/ProfileImage.jsx","components/ProfileName/ProfileName.jsx","models/UserModel.js","components/Profile/Profile.jsx","components/Post/Post.jsx","models/PostModel.js","components/Timeline/Timeline.jsx","components/Friends/Friends.jsx","pages/Login/Login.jsx","pages/Signup/Signup.jsx","pages/Home/Home.jsx","App.js","serviceWorker.js","index.js","config.js"],"names":["module","exports","__webpack_require__","p","Loader_Loader","props","loading","react_default","a","createElement","className","concat","centralized","children","Button","type","Object","assign","disabled","Input","error","onChange","textarea","value","Fragment","e","target","ProfileImage_ProfileImage","onClick","document","getElementById","click","upload","id","files","image","src","alt","width","height","addPhoto","ProfileName_ProfileName","line","onClickEdit","name","edit","tagname","components_Input_Input","getNumberPosts","_ref","asyncToGenerator","regenerator_default","mark","_callee","userRef","db","nPosts","posts","wrap","_context","prev","next","firebase","firestore","settings","timestampsInSnapshots","collection","where","get","sent","size","abrupt","stop","this","_x","apply","arguments","getFriendsFollow","_ref2","_callee2","user","ref","users","_context2","limit","forEach","doc","data","uid","push","_x2","getImage","_ref3","_callee3","folder","url","storageRef","_context3","storage","child","getDownloadURL","t0","_x3","_x4","uploadImage","_ref4","_callee4","file","meta","_context4","extension","split","put","_x5","_x6","_x7","signUp","_ref5","_callee5","email","password","_context5","auth","createUserWithEmailAndPassword","currentUser","add","_x8","_x9","_x10","_x11","update","_ref6","_callee6","_context6","console","log","_x12","_x13","_x14","Profile","state","uploadProfileImage","profileImage","_this","userData","setState","uploadCoverImage","coverImage","_this2","history","React","Component","withRouter","Post","post","objectSpread","_this$state","postText","date","getDate","Date","year","getFullYear","month","getMonth","toString","formatedMonth","length","day","formatedDay","hour","getHours","formatedHour","minute","getMinutes","formatedMinute","second","getSeconds","Timeline","rows","posting","orderBy","onSnapshot","querySnapshot","_this3","onFocus","placeholder","components_Button_Button","Array","isArray","map","Post_Post_Post","key","Friends","getImages","Promise","all","heigth","Login","submit","showErrors","signInWithEmailAndPassword","message","_this$state2","Signup","t1","onAuthStateChanged","Home","signOut","components_Profile_Profile","Timeline_Timeline_Timeline","Friends_Friends_Friends","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43729aab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add_photo.a9270650.svg\";","import React from \"react\";\nimport \"./Loader.css\";\n\nexport default props => {\n  if (props.loading) {\n    return (\n      <div\n        className={`loader ${props.centralized ? \" loader-centralized \" : \"\"} ${\n          props.className\n        }`}\n      />\n    );\n  } else {\n    return props.children || null;\n  }\n};\n","import React from \"react\";\nimport Loader from \"../Loader\";\nimport \"./Button.css\";\n\nconst Button = props => {\n  let { className, children, type, loading } = props;\n  return (\n    <button\n      {...props}\n      className={`button button-${type} ${\n        loading ? \"button-loading\" : \"\"\n      } ${className} `}\n      disabled={loading}\n    >\n      <Loader loading={loading} className=\"button-loading-space\" />\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Input.css\";\n\nconst Input = props => {\n  let { className, error, onChange, textarea, value } = props;\n\n  return (\n    <>\n      {!textarea && (\n        <input\n          className={`input ${error ? \" input-error \" : \"\"}` + className}\n          {...props}\n          onChange={e => {\n            if (onChange) {\n              onChange(e.target.value);\n            }\n          }}\n        />\n      )}\n\n      {textarea && (\n        <textarea\n          className={`input ${error ? \" input-error \" : \"\"}` + className}\n          {...props}\n          onChange={e => {\n            if (onChange) {\n              onChange(e.target.value);\n            }\n          }}\n        >\n          {value}\n        </textarea>\n      )}\n\n      {error && <p className=\"input-error-label\">* {error}</p>}\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nimport addPhoto from \"../../resources/icons/add_photo.svg\";\n\nimport \"./ProfileImage.css\";\n\nexport default props => (\n  <div\n    className={`profile-image ${props.className}`}\n    onClick={() => document.getElementById(\"profile-input\").click()}\n  >\n    {props.upload && (\n      <input\n        type=\"file\"\n        id=\"profile-input\"\n        className=\"profile-input\"\n        onChange={e => props.upload(e.target.files[0])}\n      />\n    )}\n    {props.image && (\n      <img\n        src={props.image}\n        alt=\"\"\n        className=\"profile-image-svg\"\n        width={props.width}\n        height={props.height}\n      />\n    )}\n    {!props.image && <img src={addPhoto} alt=\"\" />}\n  </div>\n);\n","import React from \"react\";\n\nimport Input from \"../Input\";\nimport \"./ProfileName.css\";\n\nexport default props => (\n  <div\n    className={`profile-name ${props.line ? \"profile-name-line\" : \"\"} ${\n      props.className\n    }`}\n    onClick={() => (props.onClickEdit ? props.onClickEdit() : null)}\n  >\n    <span>{props.name}</span>\n    {!props.edit && (\n      <span className={`profile-tag ${props.line ? \"profile-tag-line\" : \"\"}`}>\n        @{props.tagname}\n      </span>\n    )}\n\n    {props.edit && <Input />}\n  </div>\n);\n","import firebase from \"firebase/app\";\n\nexport const getNumberPosts = async userRef => {\n  let db = firebase.firestore();\n  let nPosts = 0;\n\n  db.settings({\n    timestampsInSnapshots: true\n  });\n\n  if (userRef) {\n    let posts = await db\n      .collection(\"posts\")\n      .where(\"user\", \"==\", userRef)\n      .get();\n    nPosts = posts.size;\n  }\n\n  return nPosts;\n};\n\nexport const getFriendsFollow = async user => {\n  if (user) {\n    let db = firebase.firestore();\n    db.settings({\n      timestampsInSnapshots: true\n    });\n\n    let ref = await db\n      .collection(\"users\")\n      .limit(4)\n      .get();\n\n    let users = [];\n\n    ref.forEach(doc => {\n      if (doc.data().uid !== user.uid) {\n        users.push(doc.data());\n      }\n    });\n    return users;\n  }\n};\n\nexport const getImage = async (uid, folder) => {\n  let url = null;\n  if (uid) {\n    try {\n      let storageRef = firebase.storage().ref();\n\n      url = await storageRef.child(`${folder}/${uid}.jpg`).getDownloadURL();\n    } catch (error) {\n      return url;\n    }\n    return url;\n  }\n};\n\nexport const uploadImage = async (file, uid, folder) => {\n  if (uid && file) {\n    let storageRef = firebase.storage().ref();\n\n    let meta = {\n      type: file.type,\n      extension: file.name.split(\".\")[1]\n    };\n\n    await storageRef.child(`${folder}/${uid}.jpg`).put(file, meta);\n\n    return true;\n  }\n};\n\nexport const signUp = async (email, password, name, tagname) => {\n  await firebase.auth().createUserWithEmailAndPassword(email, password);\n  let user = firebase.auth().currentUser;\n  let db = firebase.firestore();\n  db.settings({\n    timestampsInSnapshots: true\n  });\n\n  await db.collection(\"users\").add({\n    uid: user.uid,\n    name,\n    tagname\n  });\n\n  return true;\n};\n\nexport const update = async (name, tagname, userRef) => {\n  console.log(userRef);\n  let db = firebase.firestore();\n  db.settings({\n    timestampsInSnapshots: true\n  });\n\n  await db\n    .collection(\"users\")\n    .doc(userRef)\n    .update({\n      name,\n      tagname\n    });\n\n  return true;\n};\n","import React from \"react\";\nimport \"./Profile.css\";\n\nimport ProfileImage from \"../ProfileImage\";\nimport ProfileName from \"../ProfileName\";\nimport Loader from \"../Loader\";\n\nimport { getNumberPosts, uploadImage, getImage } from \"../../models/UserModel\";\n\nimport { withRouter } from \"react-router-dom\";\n\nclass Profile extends React.Component {\n  state = {\n    loading: true\n  };\n\n  async componentDidMount() {\n    let nPosts = await getNumberPosts(this.props.userRef);\n    let profileImage = await getImage(this.props.userData.uid, \"profile\");\n    let coverImage = await getImage(this.props.userData.uid, \"cover\");\n\n    this.setState({\n      nPosts,\n      loading: false,\n      profileImage,\n      coverImage\n    });\n  }\n\n  uploadProfileImage = async file => {\n    if (await uploadImage(file, this.props.userData.uid, \"profile\")) {\n      let profileImage = await getImage(this.props.userData.uid, \"profile\");\n\n      this.setState({\n        profileImage\n      });\n    }\n  };\n\n  uploadCoverImage = async file => {\n    if (await uploadImage(file, this.props.userData.uid, \"cover\")) {\n      let coverImage = await getImage(this.props.userData.uid, \"cover\");\n      this.setState({\n        coverImage\n      });\n    }\n  };\n\n  render() {\n    let user = this.props.userData || {};\n\n    return (\n      <div className=\"profile\">\n        <Loader loading={this.state.loading} centralized=\"true\">\n          <div\n            className=\"profile-cover\"\n            onClick={() =>\n              document.getElementById(\"profile-cover-input\").click()\n            }\n          >\n            <input\n              type=\"file\"\n              id=\"profile-cover-input\"\n              className=\"profile-cover-input\"\n              onChange={e => this.uploadCoverImage(e.target.files[0])}\n            />\n            {this.state.coverImage && (\n              <img\n                src={this.state.coverImage}\n                alt=\"\"\n                className=\"profile-cover-image\"\n              />\n            )}\n          </div>\n          <ProfileName\n            name={user.name}\n            tagname={user.tagname}\n            className=\"profile-name-absolute\"\n            edit={this.state.edit}\n            onClickEdit={() => this.props.history.push(\"/signup\")}\n          />\n\n          <div className=\"profile-numbers\">\n            <div className=\"profile-numbers-column\">\n              <span className=\"profile-numbers-column-title\">Tweets</span>\n              <span className=\"profile-numbers-column-value\">\n                {this.state.nPosts}\n              </span>\n            </div>\n          </div>\n\n          <ProfileImage\n            image={this.state.profileImage}\n            className=\"profile-image-absolute\"\n            upload={this.uploadProfileImage}\n            width=\"70\"\n            height=\"70\"\n          />\n        </Loader>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Profile);\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"./Post.css\";\nimport ProfileImage from \"../ProfileImage\";\nimport ProfileName from \"../ProfileName\";\n\nimport { getImage } from \"../../models/UserModel\";\n\nexport default class Post extends React.Component {\n  state = {\n    post: null\n  };\n\n  async componentDidMount() {\n    let { post } = this.props;\n    let db = firebase.firestore();\n    db.settings({\n      timestampsInSnapshots: true\n    });\n\n    let user = await db\n      .collection(\"users\")\n      .doc(post.user.id)\n      .get();\n\n    let profileImage = await getImage(user.data().uid, \"profile\");\n\n    this.setState({\n      post: {\n        ...post,\n        user: user.data()\n      },\n      profileImage\n    });\n  }\n\n  render() {\n    let { post, profileImage } = this.state;\n\n    return (\n      <>\n        {post && (\n          <div className=\"post\">\n            <div className=\"post-profile\">\n              <ProfileImage\n                className=\"post-image\"\n                image={profileImage}\n                width=\"50\"\n                height=\"50\"\n              />\n              <ProfileName\n                name={post.user.name}\n                tagname={post.user.tagname}\n                className=\"post-user\"\n              />\n            </div>\n            <div className=\"post-text\">{post.postText}</div>\n            <div className=\"post-date\">{post.date}</div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import firebase from \"firebase/app\";\n\nexport const post = async (userRef, postText) => {\n  if (userRef) {\n    let db = firebase.firestore();\n    db.settings({\n      timestampsInSnapshots: true\n    });\n\n    await db.collection(\"posts\").add({\n      user: userRef,\n      postText,\n      date: getDate()\n    });\n\n    return true;\n  }\n};\n\nconst getDate = () => {\n  let date = new Date(),\n    year = date.getFullYear(),\n    month = (date.getMonth() + 1).toString(),\n    formatedMonth = month.length === 1 ? \"0\" + month : month,\n    day = date.getDate().toString(),\n    formatedDay = day.length === 1 ? \"0\" + day : day,\n    hour = date.getHours().toString(),\n    formatedHour = hour.length === 1 ? \"0\" + hour : hour,\n    minute = date.getMinutes().toString(),\n    formatedMinute = minute.length === 1 ? \"0\" + minute : minute,\n    second = date.getSeconds().toString(),\n    formatedSecond = second.length === 1 ? \"0\" + second : second;\n  return (\n    formatedDay +\n    \"-\" +\n    formatedMonth +\n    \"-\" +\n    year +\n    \" \" +\n    formatedHour +\n    \":\" +\n    formatedMinute +\n    \":\" +\n    formatedSecond\n  );\n};\n","import React from \"react\";\nimport Input from \"../Input\";\nimport Button from \"../Button\";\nimport Post from \"../Post\";\nimport Loader from \"../Loader\";\n\nimport \"./Timeline.css\";\nimport firebase from \"firebase/app\";\n\nimport { post } from \"../../models/PostModel\";\n\nexport default class Timeline extends React.Component {\n  state = {\n    postText: \"\",\n    posts: [],\n    rows: 1,\n    loading: true\n  };\n\n  componentDidMount() {\n    let db = firebase.firestore();\n    db.settings({\n      timestampsInSnapshots: true\n    });\n\n    db.collection(\"posts\")\n      .orderBy(\"date\", \"desc\")\n      .onSnapshot(querySnapshot => {\n        var posts = [];\n\n        querySnapshot.forEach(doc => {\n          posts.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        this.setState({ posts, loading: false });\n      });\n  }\n\n  post = async () => {\n    let { postText } = this.state;\n\n    if (postText) {\n      this.setState({ posting: true });\n\n      if (await post(this.props.userRef, postText)) {\n        this.setState({ postText: \"\", rows: 1, posting: false });\n      }\n    }\n  };\n\n  render() {\n    let { postText, posts, rows, loading } = this.state;\n\n    return (\n      <div className=\"timeline\">\n        <Loader loading={loading} centralized=\"true\">\n          <div className=\"timeline-form\">\n            <Input\n              textarea=\"true\"\n              rows={rows}\n              onFocus={() => this.setState({ rows: 3 })}\n              className=\"timeline-input\"\n              value={postText}\n              onChange={postText => this.setState({ postText })}\n              placeholder=\" O que está acontecendo?\"\n            />\n            {rows > 1 && (\n              <Button\n                type=\"outline\"\n                onClick={this.post}\n                className=\"timeline-tweet-button\"\n              >\n                Tweetar\n              </Button>\n            )}\n          </div>\n\n          <div className={`${rows > 1 ? \"timeline-posts\" : \"\"}`}>\n            {posts &&\n              Array.isArray(posts) &&\n              posts.map(post => <Post post={post} key={post.id} />)}\n          </div>\n        </Loader>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Friends.css\";\nimport Button from \"../Button\";\nimport ProfileImage from \"../ProfileImage\";\nimport ProfileName from \"../ProfileName\";\nimport Loader from \"../Loader\";\nimport { getFriendsFollow } from \"../../models/UserModel\";\n\nimport { getImage } from \"../../models/UserModel\";\n\nexport default class Friends extends React.Component {\n  state = {\n    loading: true\n  };\n\n  async componentDidMount() {\n    let users = await getFriendsFollow(this.props.userData);\n    if (Array.isArray(users)) {\n      let getImages = users.map(async user => {\n        user.profileImage = await getImage(user.uid, \"profile\");\n      });\n\n      await Promise.all(getImages);\n    }\n\n    this.setState({ users, loading: false });\n  }\n\n  render() {\n    let users = this.state.users || [];\n    let { loading } = this.state;\n\n    return (\n      <div className=\"friends\">\n        <Loader loading={loading} centralized=\"true\">\n          <div className=\"friends-text\">Quem Seguir</div>\n\n          {users &&\n            Array.isArray(users) &&\n            users.map(user => (\n              <div className=\"friends-profile\" key={user.uid}>\n                <ProfileImage\n                  className=\"friends-image\"\n                  image={user.profileImage}\n                  width=\"50\"\n                  heigth=\"50\"\n                />\n                <div>\n                  <ProfileName\n                    name={user.name}\n                    tagname={user.tagname}\n                    line=\"true\"\n                  />\n                  <Button type=\"outline\" className=\"friends-follow\">\n                    Seguir\n                  </Button>\n                </div>\n              </div>\n            ))}\n        </Loader>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { Button, Input } from \"../../components\";\nimport \"./Login.css\";\n\nimport firebase from \"firebase/app\";\n\nexport default class Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    loading: false\n  };\n\n  submit = async () => {\n    let { email, password } = this.state;\n\n    if (!email || !password) {\n      this.setState({ showErrors: true });\n    } else {\n      this.setState({ showErrors: false, loading: true });\n      try {\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n\n        this.props.history.push(\"/home\");\n      } catch (error) {\n        this.setState({ error: error.message, loading: false });\n      }\n    }\n  };\n\n  render() {\n    let { email, password, showErrors, error, loading } = this.state;\n\n    return (\n      <div className=\"login\">\n        <p>Log In</p>\n\n        <Input\n          type=\"text\"\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={email => this.setState({ email })}\n          error={showErrors ? \"E-mail is required\" : null}\n        />\n        <Input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={password => this.setState({ password })}\n          error={showErrors ? \"Password is required\" : null}\n        />\n        <Button type=\"outline\" onClick={this.submit} loading={loading || \"\"}>\n          Log In\n        </Button>\n        <Button\n          type=\"normal\"\n          onClick={() => this.props.history.push(\"/signup\")}\n        >\n          Sign Up\n        </Button>\n        <p className=\"input-error-label\">{error}</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { Button, Input } from \"../../components\";\nimport \"./Signup.css\";\n\nimport { signUp, update } from \"../../models/UserModel\";\nimport firebase from \"firebase/app\";\n\nexport default class Signup extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    tagname: \"\"\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user) {\n        let db = firebase.firestore();\n\n        db.settings({\n          timestampsInSnapshots: true\n        });\n\n        let ref = await db\n          .collection(\"users\")\n          .where(\"uid\", \"==\", user.uid)\n          .get();\n\n        ref.forEach(doc =>\n          this.setState({\n            ...doc.data(),\n            userRef: doc.id\n          })\n        );\n      }\n    });\n  }\n\n  submit = async () => {\n    let { email, password, name, tagname, userRef } = this.state;\n\n    if ((!userRef && (!email || !password)) || !name || !tagname) {\n      this.setState({ showErrors: true });\n    } else {\n      this.setState({ showErrors: false, loading: true });\n\n      if (userRef) {\n        try {\n          if (await update(name, tagname, userRef)) {\n            this.props.history.push(\"/home\");\n          }\n        } catch (error) {\n          this.setState({ error: error.message, loading: false });\n        }\n      } else {\n        try {\n          if (await signUp(email, password, name, tagname)) {\n            this.props.history.push(\"/login\");\n          }\n        } catch (error) {\n          this.setState({ error: error.message, loading: false });\n        }\n      }\n    }\n  };\n\n  render() {\n    let {\n      email,\n      password,\n      name,\n      showErrors,\n      error,\n      tagname,\n      loading,\n      userRef\n    } = this.state;\n\n    return (\n      <div className=\"signup\">\n        <p>Sign Up</p>\n\n        <Input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={name => this.setState({ name })}\n          error={showErrors ? \"Name is required\" : null}\n        />\n\n        <Input\n          type=\"text\"\n          placeholder=\"TagName\"\n          value={tagname}\n          onChange={tagname => this.setState({ tagname })}\n          error={showErrors ? \"TagName is required\" : null}\n        />\n\n        {!userRef && (\n          <React.Fragment>\n            <Input\n              type=\"text\"\n              placeholder=\"E-mail\"\n              value={email}\n              onChange={email => this.setState({ email })}\n              error={showErrors ? \"E-mail is required\" : null}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={password => this.setState({ password })}\n              error={showErrors ? \"Password is required\" : null}\n            />\n          </React.Fragment>\n        )}\n        <Button type=\"outline\" onClick={this.submit} loading={loading || \"\"}>\n          {!userRef && \"Sign Up\"}\n          {userRef && \"Update\"}\n        </Button>\n        <p className=\"input-error-label\">{error}</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { Button, Profile, Timeline, Friends, Loader } from \"../../components\";\nimport \"./Home.css\";\n\nimport firebase from \"firebase/app\";\n\nexport default class Home extends React.Component {\n  state = {\n    userRef: null,\n    userData: null,\n    loading: true\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user) {\n        let db = firebase.firestore();\n\n        db.settings({\n          timestampsInSnapshots: true\n        });\n\n        let ref = await db\n          .collection(\"users\")\n          .where(\"uid\", \"==\", user.uid)\n          .get();\n\n        ref.forEach(doc =>\n          this.setState({\n            userData: doc.data(),\n            userRef: doc.ref,\n            loading: false\n          })\n        );\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n\n  render() {\n    let { loading, userData, userRef } = this.state;\n\n    return (\n      <div className=\"home\">\n        <Loader loading={loading} centralized=\"true\">\n          <div className=\"home-header\">\n            <div className=\"home-header-left-button home-header-left-button-active\">\n              Página Inicial\n            </div>\n            <div className=\"home-header-left-button\">Moments</div>\n            <div className=\"home-header-left-button\">Notificações</div>\n            <div className=\"home-header-left-button\">Mensagens</div>\n            <Button\n              type=\"outline\"\n              className=\"home-header-right-button\"\n              onClick={async () => {\n                await firebase.auth().signOut();\n                this.props.history.push(\"/login\");\n              }}\n            >\n              Sair\n            </Button>\n          </div>\n\n          <div className=\"home-body\">\n            <div className=\"home-left\">\n              <Profile userRef={userRef} userData={userData} />\n            </div>\n            <div className=\"home-middle\">\n              <Timeline userRef={userRef} userData={userData} />\n            </div>\n            <div className=\"home-right\">\n              <Friends userRef={userRef} userData={userData} />\n            </div>\n          </div>\n        </Loader>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Login, Signup, Home } from \"./pages\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/home\" component={Home} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase/app\";\nimport { config } from \"./config\";\n\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\nrequire(\"firebase/firestore\");\nrequire(\"firebase/storage\");\n\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const config = {\n  apiKey: \"AIzaSyACj-yuKgbFLPyfsBf8FPQyTfLy13sVlak\",\n  authDomain: \"teste-feracode-7bdd1.firebaseapp.com\",\n  databaseURL: \"https://teste-feracode-7bdd1.firebaseio.com\",\n  projectId: \"teste-feracode-7bdd1\",\n  storageBucket: \"teste-feracode-7bdd1.appspot.com\",\n  messagingSenderId: \"409574422894\"\n};\n"],"sourceRoot":""}